{"mappings":"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","sources":["node_modules/rxjs/src/internal/BehaviorSubject.ts","node_modules/rxjs/node_modules/tslib/tslib.es6.js","node_modules/rxjs/src/internal/Subject.ts","node_modules/rxjs/src/internal/Observable.ts","node_modules/rxjs/src/internal/Subscriber.ts","node_modules/rxjs/src/internal/util/isFunction.ts","node_modules/rxjs/src/internal/Subscription.ts","node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","node_modules/rxjs/src/internal/util/createErrorClass.ts","node_modules/rxjs/src/internal/util/arrRemove.ts","node_modules/rxjs/src/internal/config.ts","node_modules/rxjs/src/internal/util/reportUnhandledError.ts","node_modules/rxjs/src/internal/scheduler/timeoutProvider.ts","node_modules/rxjs/src/internal/util/noop.ts","node_modules/rxjs/src/internal/NotificationFactories.ts","node_modules/rxjs/src/internal/util/errorContext.ts","node_modules/rxjs/src/internal/symbol/observable.ts","node_modules/rxjs/src/internal/util/pipe.ts","node_modules/rxjs/src/internal/util/identity.ts","node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","node_modules/rxjs/src/internal/operators/filter.ts","node_modules/rxjs/src/internal/util/lift.ts","node_modules/rxjs/src/internal/operators/OperatorSubscriber.ts","node_modules/rxjs/src/internal/observable/forkJoin.ts","node_modules/rxjs/src/internal/util/argsArgArrayOrObject.ts","node_modules/rxjs/src/internal/observable/innerFrom.ts","node_modules/rxjs/src/internal/util/isArrayLike.ts","node_modules/rxjs/src/internal/util/isPromise.ts","node_modules/rxjs/src/internal/util/isInteropObservable.ts","node_modules/rxjs/src/internal/util/isAsyncIterable.ts","node_modules/rxjs/src/internal/util/throwUnobservableError.ts","node_modules/rxjs/src/internal/util/isIterable.ts","node_modules/rxjs/src/internal/symbol/iterator.ts","node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","node_modules/rxjs/src/internal/util/args.ts","node_modules/rxjs/src/internal/util/isScheduler.ts","node_modules/rxjs/src/internal/util/mapOneOrManyArgs.ts","node_modules/rxjs/src/internal/operators/map.ts","node_modules/rxjs/src/internal/util/createObject.ts","node_modules/rxjs/src/internal/operators/switchMap.ts","node_modules/rxjs/src/internal/operators/tap.ts","src/math/index.ts","src/math/calcPointInPolarSystem.ts","src/math/generateFigureShape.ts","src/math/generateTornLine.ts","node_modules/random/src/rng.ts","node_modules/random/src/generators/function.ts","node_modules/random/src/rng-factory.ts","node_modules/random/src/distributions/uniform.ts","node_modules/random/src/validation.ts","node_modules/random/src/distributions/uniform-int.ts","node_modules/random/src/distributions/uniform-boolean.ts","node_modules/random/src/distributions/poisson.ts","node_modules/random/src/generators/math-random.ts","node_modules/random/src/random.ts","node_modules/random/src/distributions/normal.ts","node_modules/random/src/distributions/log-normal.ts","node_modules/random/src/distributions/bernoulli.ts","node_modules/random/src/distributions/binomial.ts","node_modules/random/src/distributions/geometric.ts","node_modules/random/src/distributions/exponential.ts","node_modules/random/src/distributions/irwin-hall.ts","node_modules/random/src/distributions/bates.ts","node_modules/random/src/distributions/pareto.ts","node_modules/seedrandom/index.js","node_modules/seedrandom/lib/alea.js","node_modules/seedrandom/lib/xor128.js","node_modules/seedrandom/lib/xorwow.js","node_modules/seedrandom/lib/xorshift7.js","node_modules/seedrandom/lib/xor4096.js","node_modules/seedrandom/lib/tychei.js","node_modules/seedrandom/seedrandom.js","src/math/applyOffset.ts","src/math/calcLineLength.ts","src/math/calcLineAngle.ts","src/math/generateSides.ts","src/math/createLine.ts","src/canvas/index.ts","src/canvas/canvas.factory.ts","src/canvas/canvas.ts","node_modules/rxjs/src/internal/observable/of.ts","node_modules/rxjs/src/internal/observable/from.ts","node_modules/rxjs/src/internal/scheduled/scheduled.ts","node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","node_modules/rxjs/src/internal/operators/observeOn.ts","node_modules/rxjs/src/internal/util/executeSchedule.ts","node_modules/rxjs/src/internal/operators/subscribeOn.ts","node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","node_modules/rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        const copy = this.observers.slice();\n        for (const observer of copy) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    return hasError || isStopped\n      ? EMPTY_SUBSCRIPTION\n      : (observers.push(subscriber), new Subscription(() => arrRemove(observers, subscriber)));\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n","/**\n * @prettier\n */\nimport { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * ### Example:\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { take } from 'rxjs/operators';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *    let total = 0;\n   *\n   *    await source$.forEach(value => {\n   *      total += value;\n   *      console.log('observable -> ', value);\n   *    });\n   *\n   *    return total;\n   * }\n   *\n   * getTotal().then(\n   *    total => console.log('Total:', total)\n   * )\n   *\n   * // Expected:\n   * // \"observable -> 0\"\n   * // \"observable -> 1\"\n   * // \"observable -> 2\"\n   * // \"observable -> 3\"\n   * // \"Total: 6\"\n   * ```\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe(\n        (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription?.unsubscribe();\n          }\n        },\n        reject,\n        resolve\n      );\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let next: ((value: T) => void) | undefined;\n    if (isFunction(observerOrNext)) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      // The first argument is an observer object, we have to pull the handlers\n      // off and capture the owner object as the context. That is because we're\n      // going to put them all in a new destination with ensured methods\n      // for `next`, `error`, and `complete`. That's part of what makes this\n      // the \"Safe\" Subscriber.\n      ({ next, error, complete } = observerOrNext);\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n      } else {\n        context = observerOrNext;\n      }\n      next = next?.bind(context);\n      error = error?.bind(context);\n      complete = complete?.bind(context);\n    }\n\n    // Once we set the destination, the superclass `Subscriber` will\n    // do it's magic in the `_next`, `_error`, and `_complete` methods.\n    this.destination = {\n      next: next ? wrapForErrorHandling(next, this) : noop,\n      error: wrapForErrorHandling(error ?? defaultErrorHandler, this),\n      complete: complete ? wrapForErrorHandling(complete, this) : noop,\n    };\n  }\n}\n\n/**\n * Wraps a user-provided handler (or our {@link defaultErrorHandler} in one case) to\n * ensure that any thrown errors are caught and handled appropriately.\n *\n * @param handler The handler to wrap\n * @param instance The SafeSubscriber instance we're going to mark if there's an error.\n */\nfunction wrapForErrorHandling(handler: (arg?: any) => void, instance: SafeSubscriber<any>) {\n  return (...args: any[]) => {\n    try {\n      handler(...args);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(err);\n      } else {\n        // Ideal path, we report this as an unhandled error,\n        // which is thrown on a new call stack.\n        reportUnhandledError(err);\n      }\n    }\n  };\n}\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n","/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered teardowns to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _teardowns: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the teardown\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown } = this;\n      if (isFunction(initialTeardown)) {\n        try {\n          initialTeardown();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _teardowns } = this;\n      if (_teardowns) {\n        this._teardowns = null;\n        for (const teardown of _teardowns) {\n          try {\n            execTeardown(teardown);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a teardown to this subscription, so that teardown will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever teardown is passed to it\n   * will automatically be executed (unless the teardown itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as teardowns to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The teardown logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the teardown if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever teardown is handed to it automatically.\n        execTeardown(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._teardowns = this._teardowns ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a teardown from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same teardown instance of a function or an unsubscribable object to a `Subcription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All teardown instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The teardown to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _teardowns } = this;\n    _teardowns && arrRemove(_teardowns, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execTeardown(teardown: Unsubscribable | (() => void)) {\n  if (isFunction(teardown)) {\n    teardown();\n  } else {\n    teardown.unsubscribe();\n  }\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n","/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n","/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n","type SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => number;\ntype ClearTimeoutFunction = (handle: number) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(...args) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.setTimeout || setTimeout)(...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle);\n  },\n  delegate: undefined,\n};\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n","import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n","import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const div = document.createElement('div');\n * div.style.cssText = `width: 200px;height: 200px;background: #09c;`;\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      new OperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n   * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure teardown.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure teardown.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    const { closed } = this;\n    super.unsubscribe();\n    // Execute additional teardown if we have any and we didn't already do so.\n    !closed && this.onFinalize?.();\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        new OperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n","import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n","import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n","/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n","import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n","import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n","import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}","import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      new OperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n","export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n","import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Restart an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = new OperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subcriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n","import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\nexport interface TapObserver<T> extends Observer<T> {\n  subscribe: () => void;\n  unsubscribe: () => void;\n  finalize: () => void;\n}\n\nexport function tap<T>(observer?: Partial<TapObserver<T>>): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next: (value: T) => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Example\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit \"big\" or \"small\" depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * ## Example\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { tap } from 'rxjs/operators';\n *\n * const source = of(1, 2, 3, 4, 5)\n *\n * source.pipe(\n *  tap(n => {\n *    if (n > 3) {\n *      throw new TypeError(`Value ${n} is greater than 3`)\n *    }\n *  })\n * )\n * .subscribe(console.log);\n * ```\n *\n * ## Example\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `\"X\"` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side-effect of logging to console.\n *\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { tap, map, concatMap, take } from 'rxjs/operators';\n *\n *\n * of(1, 2, 3).pipe(\n *  concatMap(n => interval(1000).pipe(\n *    take(Math.round(Math.random() * 10)),\n *    map(() => 'X'),\n *    tap({\n *      complete: () => console.log(`Done with ${n}`)\n *    })\n *  ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link Observable#subscribe}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          new OperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n","import calcPointInPolarSystem from './calcPointInPolarSystem';\nimport generateFigureShape from './generateFigureShape';\nimport generateTornLine from './generateTornLine';\nimport calcLineLength from './calcLineLength';\nimport calcLineAngle from './calcLineAngle';\nimport generateSides from './generateSides';\nimport applyOffset from './applyOffset';\nimport createLine from './createLine';\n\nexport {\n  calcPointInPolarSystem,\n  generateFigureShape,\n  generateTornLine,\n  calcLineLength,\n  calcLineAngle,\n  generateSides,\n  applyOffset,\n  createLine,\n};\n","const calcPointInPolarSystem = (angle: number, distance: number) => ({\n  x: distance * Math.cos(angle),\n  y: distance * Math.sin(angle),\n});\n\nexport default calcPointInPolarSystem;\n","import { FigureSide, FigureSideShape, Point, PointSide, Sides } from '../types';\n\nexport const getPointSide = (point: Point, canvasWidth: number, canvasHeight: number): PointSide => {\n  if (point.x === 0 && point.y > 0 && point.y <= canvasHeight) {\n    return 'LEFT';\n  }\n\n  if (point.y === 0 && point.x > 0 && point.x <= canvasWidth) {\n    return 'TOP';\n  }\n\n  if (point.x === canvasWidth && point.y > 0 && point.y <= canvasHeight) {\n    return 'RIGHT';\n  }\n\n  if (point.y === canvasHeight && point.x > 0 && point.x <= canvasWidth) {\n    return 'BOTTOM';\n  }\n\n  throw new Error(`Illegal point: {x: ${point.x}, y: ${point.y}}.`);\n};\n\nexport const generateFigureClosingPath = (\n  startSide: PointSide,\n  endSide: PointSide,\n  sides: Sides,\n  figureSide: FigureSide,\n) => {\n  let directions: PointSide[] = ['TOP', 'LEFT', 'BOTTOM', 'RIGHT', 'TOP', 'LEFT', 'BOTTOM', 'RIGHT'];\n\n  if (figureSide === 'right') {\n    directions = directions.reverse();\n  }\n\n  let currentSideIdx = directions.findIndex((side) => side === endSide);\n  let closingPath: Point[] = [];\n\n  while (directions[currentSideIdx] !== startSide) {\n    const side = directions[currentSideIdx];\n\n    switch (side) {\n      case 'LEFT':\n      case 'BOTTOM':\n        closingPath = [...closingPath, figureSide === 'left' ? sides[side].end : sides[side].start];\n        break;\n      case 'RIGHT':\n      case 'TOP':\n        closingPath = [...closingPath, figureSide === 'left' ? sides[side].start : sides[side].end];\n        break;\n      default:\n        // Do nothing.\n        break;\n    }\n    currentSideIdx += 1;\n  }\n\n  return closingPath;\n};\n\nconst generateFigure = (path: Point[], width: number, height: number, sides: Sides): FigureSideShape => {\n  const startSide = getPointSide(path[0], width, height);\n  const endSide = getPointSide(path[path.length - 1], width, height);\n\n  return {\n    startSide,\n    endSide,\n    left: [...path, ...generateFigureClosingPath(startSide, endSide, sides, 'left')],\n    right: [...path, ...generateFigureClosingPath(startSide, endSide, sides, 'right')],\n  };\n};\n\nexport default generateFigure;\n","import random from 'random';\n\nimport applyOffset from './applyOffset';\nimport { Point } from '../types';\n\n// https://stackoverflow.com/a/34372870\nexport const getPointOnLine = (lineStart: Point, lineEnd: Point, lineDistance: number, distanceToPoint: number) => {\n  const fractionOfTotal = distanceToPoint / lineDistance;\n\n  return {\n    x: lineStart.x + (lineEnd.x - lineStart.x) * fractionOfTotal,\n    y: lineStart.y + (lineEnd.y - lineStart.y) * fractionOfTotal,\n  };\n};\n\nconst generateTornLine = (start: Point, end: Point, lineLength: number, countOfPoints: number, offset: number) => {\n  const onePartSize = lineLength / countOfPoints;\n\n  const { points } = Array.from({ length: countOfPoints - 1 }).reduce<{ points: Point[]; prevPoint: Point }>(\n    (acc, _, i) => {\n      const randDistance = random.float(onePartSize * i, onePartSize * (i + 1));\n\n      const point = getPointOnLine(start, end, lineLength, randDistance);\n\n      const offsetAbs = Math.abs(offset) * -1;\n      const offsetPoint = { x: random.float(offsetAbs * -1, offsetAbs), y: random.float(offsetAbs * -1, offsetAbs) };\n\n      return {\n        points: [...acc.points, applyOffset(point, offsetPoint)],\n        prevPoint: point,\n      };\n    },\n    { points: [], prevPoint: start },\n  );\n\n  return [start, ...points, end];\n};\n\nexport default generateTornLine;\n","export type SeedFn = () => number\nexport type SeedType = number | string | SeedFn | RNG\n\nexport default abstract class RNG {\n  abstract get name(): string\n\n  abstract next(): number\n\n  abstract seed(_seed?: SeedType, _opts?: Record<string, unknown>): void\n\n  abstract clone(_seed?: SeedType, _opts?: Record<string, unknown>): RNG\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _seed(seed: number, _opts?: Record<string, unknown>) {\n    // TODO: add entropy and stuff\n\n    if (seed === (seed || 0)) {\n      return seed\n    } else {\n      const strSeed = '' + seed\n      let s = 0\n\n      for (let k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0\n      }\n\n      return s\n    }\n  }\n}\n","import RNG, { SeedFn } from '../rng'\n\nexport default class RNGFunction extends RNG {\n  _rng: SeedFn\n\n  constructor(thunk: SeedFn, opts?: Record<string, unknown>) {\n    super()\n\n    this.seed(thunk, opts)\n  }\n\n  get name() {\n    return 'function'\n  }\n\n  next() {\n    return this._rng()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(thunk: SeedFn, _opts?: Record<string, unknown>) {\n    this._rng = thunk\n  }\n\n  clone(_: undefined, opts: Record<string, unknown>) {\n    return new RNGFunction(this._rng, opts)\n  }\n}\n","import seedrandom from 'seedrandom'\n\nimport RNG from './rng'\nimport RNGFunction from './generators/function'\n\n/**\n * Construct an RNG with variable inputs. Used in calls to Random constructor\n * @param {...*} args - Distribution-specific arguments\n * @return RNG\n *\n * @example\n * new Random(RNGFactory(...args))\n */\nexport default <T extends any[]>(...args: T) => {\n  const [arg0 = 'default'] = args\n\n  switch (typeof arg0) {\n    case 'object':\n      if (arg0 instanceof RNG) {\n        return arg0\n      }\n      break\n\n    case 'function':\n      return new RNGFunction(arg0)\n\n    case 'number':\n    case 'string':\n    default:\n      return new RNGFunction(seedrandom(...args))\n  }\n\n  throw new Error(`invalid RNG \"${arg0}\"`)\n}\n","import { Random } from '../random'\n\nexport default (random: Random, min = 0, max = 1) => {\n  return () => {\n    return random.next() * (max - min) + min\n  }\n}\n","export function numberValidator(num: number) {\n  return new NumberValidator(num)\n}\n\nexport class NumberValidator {\n  private n: number\n  constructor(num: number) {\n    this.n = num\n  }\n\n  public isInt = (): this => {\n    if (Number.isInteger(this.n)) {\n      return this\n    }\n    throw new Error(`Expected number to be an integer, got ${this.n}`)\n  }\n\n  public isPositive = (): this => {\n    if (this.n > 0) {\n      return this\n    }\n    throw new Error(`Expected number to be positive, got ${this.n}`)\n  }\n\n  public lessThan = (v: number): this => {\n    if (this.n < v) {\n      return this\n    }\n    throw new Error(`Expected number to be less than ${v}, got ${this.n}`)\n  }\n\n  public greaterThanOrEqual = (v: number): this => {\n    if (this.n >= v) {\n      return this\n    }\n    throw new Error(\n      `Expected number to be greater than or equal to ${v}, got ${this.n}`\n    )\n  }\n\n  public greaterThan = (v: number): this => {\n    if (this.n > v) {\n      return this\n    }\n    throw new Error(`Expected number to be greater than ${v}, got ${this.n}`)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, min = 0, max = 1) => {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min\n    min = 0\n  }\n\n  numberValidator(min).isInt()\n  numberValidator(max).isInt()\n\n  return () => {\n    return Math.floor(random.next() * (max - min + 1) + min)\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random) => {\n  return () => {\n    return random.next() >= 0.5\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nconst logFactorialTable = [\n  0.0, 0.0, 0.69314718055994529, 1.791759469228055, 3.1780538303479458,\n  4.7874917427820458, 6.5792512120101012, 8.5251613610654147,\n  10.604602902745251, 12.801827480081469\n]\n\nconst logFactorial = (k: number) => {\n  return logFactorialTable[k]\n}\n\nconst logSqrt2PI = 0.91893853320467267\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  if (lambda < 10) {\n    // inversion method\n    const expMean = Math.exp(-lambda)\n\n    return () => {\n      let p = expMean\n      let x = 0\n      let u = random.next()\n\n      while (u > p) {\n        u = u - p\n        p = (lambda * p) / ++x\n      }\n\n      return x\n    }\n  } else {\n    // generative method\n    const smu = Math.sqrt(lambda)\n    const b = 0.931 + 2.53 * smu\n    const a = -0.059 + 0.02483 * b\n    const invAlpha = 1.1239 + 1.1328 / (b - 3.4)\n    const vR = 0.9277 - 3.6224 / (b - 2)\n\n    return () => {\n      while (true) {\n        let u\n        let v = random.next()\n\n        if (v <= 0.86 * vR) {\n          u = v / vR - 0.43\n          return Math.floor(\n            ((2 * a) / (0.5 - Math.abs(u)) + b) * u + lambda + 0.445\n          )\n        }\n\n        if (v >= vR) {\n          u = random.next() - 0.5\n        } else {\n          u = v / vR - 0.93\n          u = (u < 0 ? -0.5 : 0.5) - u\n          v = random.next() * vR\n        }\n\n        const us = 0.5 - Math.abs(u)\n        if (us < 0.013 && v > us) {\n          continue\n        }\n\n        const k = Math.floor(((2 * a) / us + b) * u + lambda + 0.445)\n        v = (v * invAlpha) / (a / (us * us) + b)\n\n        if (k >= 10) {\n          const t =\n            (k + 0.5) * Math.log(lambda / k) -\n            lambda -\n            logSqrt2PI +\n            k -\n            (1 / 12.0 - (1 / 360.0 - 1 / (1260.0 * k * k)) / (k * k)) / k\n\n          if (Math.log(v * smu) <= t) {\n            return k\n          }\n        } else if (k >= 0) {\n          const f = logFactorial(k) ?? 0\n\n          if (Math.log(v) <= k * Math.log(lambda) - lambda - f) {\n            return k\n          }\n        }\n      }\n    }\n  }\n}\n","import RNG from '../rng'\n\nexport default class RNGMathRandom extends RNG {\n  get name() {\n    return 'default'\n  }\n\n  next() {\n    return Math.random()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  seed(_seed: unknown, _opts: Record<string, unknown>) {\n    // intentionally empty\n  }\n\n  clone() {\n    return new RNGMathRandom()\n  }\n}\n","import RNG from './rng'\nimport RNGFactory from './rng-factory'\n\nimport uniform from './distributions/uniform'\nimport uniformInt from './distributions/uniform-int'\nimport uniformBoolean from './distributions/uniform-boolean'\nimport normal from './distributions/normal'\nimport logNormal from './distributions/log-normal'\nimport bernoulli from './distributions/bernoulli'\nimport binomial from './distributions/binomial'\nimport geometric from './distributions/geometric'\nimport poisson from './distributions/poisson'\nimport exponential from './distributions/exponential'\nimport irwinHall from './distributions/irwin-hall'\nimport bates from './distributions/bates'\nimport pareto from './distributions/pareto'\nimport RNGMathRandom from './generators/math-random'\n\n/**\n * Distribution function\n */\ninterface IDistFn<R> {\n  (random: Random, ...argv: any): R\n}\n\n/**\n * Distribution\n */\ninterface IDist<R> {\n  (): R\n}\n\n/**\n * Keyed cache entry\n */\ninterface ICacheEntry<T> {\n  key: string\n  distribution: () => T\n}\n\nexport { RNG, RNGFactory }\n\n/**\n * Seedable random number generator supporting many common distributions.\n *\n * Defaults to Math.random as its underlying pseudorandom number generator.\n *\n * @name Random\n * @class\n *\n * @param {RNG|function} [rng=Math.random] - Underlying pseudorandom number generator.\n */\nexport class Random {\n  protected _rng: RNG\n  protected _patch: typeof Math.random | undefined\n  protected _cache: {\n    [k: string]: ICacheEntry<any>\n  } = {}\n\n  constructor(rng?: RNG) {\n    if (rng && rng instanceof RNG) {\n      this.use(rng)\n    } else {\n      this.use(new RNGMathRandom())\n    }\n    this._cache = {}\n  }\n\n  /**\n   * @member {RNG} Underlying pseudo-random number generator\n   */\n  get rng() {\n    return this._rng\n  }\n\n  /**\n   * Creates a new `Random` instance, optionally specifying parameters to\n   * set a new seed.\n   *\n   * @see RNG.clone\n   *\n   * @param {string} [seed] - Optional seed for new RNG.\n   * @param {object} [opts] - Optional config for new RNG options.\n   * @return {Random}\n   */\n  clone<T>(...args: [T]): Random {\n    if (args.length) {\n      return new Random(RNGFactory(...args))\n    } else {\n      return new Random(this.rng.clone())\n    }\n  }\n\n  /**\n   * Sets the underlying pseudorandom number generator used via\n   * either an instance of `seedrandom`, a custom instance of RNG\n   * (for PRNG plugins), or a string specifying the PRNG to use\n   * along with an optional `seed` and `opts` to initialize the\n   * RNG.\n   *\n   * @example\n   * import random from 'random'\n   *\n   * random.use('example_seedrandom_string')\n   * // or\n   * random.use(seedrandom('kittens'))\n   * // or\n   * random.use(Math.random)\n   *\n   * @param {...*} args\n   */\n  use(...args: [RNG]) {\n    this._rng = RNGFactory(...args)\n  }\n\n  /**\n   * Patches `Math.random` with this Random instance's PRNG.\n   */\n  patch() {\n    if (this._patch) {\n      throw new Error('Math.random already patched')\n    }\n\n    this._patch = Math.random\n    Math.random = this.uniform()\n  }\n\n  /**\n   * Restores a previously patched `Math.random` to its original value.\n   */\n  unpatch() {\n    if (this._patch) {\n      Math.random = this._patch\n      delete this._patch\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform utility functions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Convenience wrapper around `this.rng.next()`\n   *\n   * Returns a floating point number in [0, 1).\n   *\n   * @return {number}\n   */\n  next = (): number => {\n    return this._rng.next()\n  }\n\n  /**\n   * Samples a uniform random floating point number, optionally specifying\n   * lower and upper bounds.\n   *\n   * Convence wrapper around `random.uniform()`\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {number}\n   */\n  float = (min?: number, max?: number): number => {\n    return this.uniform(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  int = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random integer, optionally specifying lower and upper\n   * bounds.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @alias `random.int`\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {number}\n   */\n  integer = (min?: number, max?: number) => {\n    return this.uniformInt(min, max)()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @alias `random.boolean`\n   *\n   * @return {boolean}\n   */\n  bool = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Samples a uniform random boolean value.\n   *\n   * Convence wrapper around `random.uniformBoolean()`\n   *\n   * @return {boolean}\n   */\n  boolean = () => {\n    return this.uniformBoolean()()\n  }\n\n  /**\n   * Returns an item chosen uniformly at trandom from the given array.\n   *\n   * Convence wrapper around `random.uniformInt()`\n   *\n   * @param {Array<T>} [array] - Lower bound (integer, inclusive)\n   * @return {T | undefined}\n   */\n  choice<T>(array: Array<T>): T | undefined {\n    if (!Array.isArray(array)) {\n      throw new Error(\n        `Random.choice expected input to be an array, got ${typeof array}`\n      )\n    }\n\n    const length = array?.length\n\n    if (length > 0) {\n      const index = this.uniformInt(0, length - 1)()\n      return array[index]\n    } else {\n      return undefined\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  // Uniform distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Continuous uniform distribution](https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)).\n   *\n   * @param {number} [min=0] - Lower bound (float, inclusive)\n   * @param {number} [max=1] - Upper bound (float, exclusive)\n   * @return {function}\n   */\n  uniform = (min?: number, max?: number) => {\n    return this._memoize<number>('uniform', uniform, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution).\n   *\n   * @param {number} [min=0] - Lower bound (integer, inclusive)\n   * @param {number} [max=1] - Upper bound (integer, inclusive)\n   * @return {function}\n   */\n  uniformInt = (min?: number, max?: number) => {\n    return this._memoize<number>('uniformInt', uniformInt, min, max)\n  }\n\n  /**\n   * Generates a [Discrete uniform distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution),\n   * with two possible outcomes, `true` or `false.\n   *\n   * This method is analogous to flipping a coin.\n   *\n   * @return {function}\n   */\n  uniformBoolean = () => {\n    return this._memoize<boolean>('uniformBoolean', uniformBoolean)\n  }\n\n  // --------------------------------------------------------------------------\n  // Normal distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Normal distribution](https://en.wikipedia.org/wiki/Normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean\n   * @param {number} [sigma=1] - Standard deviation\n   * @return {function}\n   */\n  normal = (mu?: number, sigma?: number) => {\n    return normal(this, mu, sigma)\n  }\n\n  /**\n   * Generates a [Log-normal distribution](https://en.wikipedia.org/wiki/Log-normal_distribution).\n   *\n   * @param {number} [mu=0] - Mean of underlying normal distribution\n   * @param {number} [sigma=1] - Standard deviation of underlying normal distribution\n   * @return {function}\n   */\n  logNormal = (mu?: number, sigma?: number) => {\n    return logNormal(this, mu, sigma)\n  }\n\n  // --------------------------------------------------------------------------\n  // Bernoulli distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Bernoulli distribution](https://en.wikipedia.org/wiki/Bernoulli_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  bernoulli = (p?: number) => {\n    return bernoulli(this, p)\n  }\n\n  /**\n   * Generates a [Binomial distribution](https://en.wikipedia.org/wiki/Binomial_distribution).\n   *\n   * @param {number} [n=1] - Number of trials.\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  binomial = (n?: number, p?: number) => {\n    return binomial(this, n, p)\n  }\n\n  /**\n   * Generates a [Geometric distribution](https://en.wikipedia.org/wiki/Geometric_distribution).\n   *\n   * @param {number} [p=0.5] - Success probability of each trial.\n   * @return {function}\n   */\n  geometric = (p?: number) => {\n    return geometric(this, p)\n  }\n\n  // --------------------------------------------------------------------------\n  // Poisson distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates a [Poisson distribution](https://en.wikipedia.org/wiki/Poisson_distribution).\n   *\n   * @param {number} [lambda=1] - Mean (lambda > 0)\n   * @return {function}\n   */\n  poisson = (lambda?: number) => {\n    return poisson(this, lambda)\n  }\n\n  /**\n   * Generates an [Exponential distribution](https://en.wikipedia.org/wiki/Exponential_distribution).\n   *\n   * @param {number} [lambda=1] - Inverse mean (lambda > 0)\n   * @return {function}\n   */\n  exponential = (lambda?: number) => {\n    return exponential(this, lambda)\n  }\n\n  // --------------------------------------------------------------------------\n  // Misc distributions\n  // --------------------------------------------------------------------------\n\n  /**\n   * Generates an [Irwin Hall distribution](https://en.wikipedia.org/wiki/Irwin%E2%80%93Hall_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to sum (n >= 0)\n   * @return {function}\n   */\n  irwinHall = (n?: number) => {\n    return irwinHall(this, n)\n  }\n\n  /**\n   * Generates a [Bates distribution](https://en.wikipedia.org/wiki/Bates_distribution).\n   *\n   * @param {number} [n=1] - Number of uniform samples to average (n >= 1)\n   * @return {function}\n   */\n  bates = (n?: number) => {\n    return bates(this, n)\n  }\n\n  /**\n   * Generates a [Pareto distribution](https://en.wikipedia.org/wiki/Pareto_distribution).\n   *\n   * @param {number} [alpha=1] - Alpha\n   * @return {function}\n   */\n  pareto = (alpha?: number) => {\n    return pareto(this, alpha)\n  }\n\n  // --------------------------------------------------------------------------\n  // Internal\n  // --------------------------------------------------------------------------\n\n  /**\n   * Memoizes distributions to ensure they're only created when necessary.\n   *\n   * Returns a thunk which that returns independent, identically distributed\n   * samples from the specified distribution.\n   *\n   * @private\n   *\n   * @param {string} label - Name of distribution\n   * @param {function} getter - Function which generates a new distribution\n   * @param {...*} args - Distribution-specific arguments\n   *\n   * @return {function}\n   */\n  _memoize<T>(label: string, getter: IDistFn<any>, ...args: any[]): IDist<T> {\n    const key = `${args.join(';')}`\n    let value = this._cache[label]\n\n    if (value === undefined || value.key !== key) {\n      value = {\n        key,\n        distribution: getter(this, ...args)\n      }\n      this._cache[label] = value\n    }\n\n    return value.distribution\n  }\n}\n\n// defaults to Math.random as its RNG\nexport default new Random()\n","import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  return () => {\n    let x: number, y: number, r: number\n\n    do {\n      x = random.next() * 2 - 1\n      y = random.next() * 2 - 1\n      r = x * x + y * y\n    } while (!r || r > 1)\n\n    return mu + sigma * y * Math.sqrt((-2 * Math.log(r)) / r)\n  }\n}\n","import { Random } from '../random'\n\nexport default (random: Random, mu = 0, sigma = 1) => {\n  const normal = random.normal(mu, sigma)\n  return () => {\n    return Math.exp(normal())\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    return Math.floor(random.next() + p)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1, p = 0.5) => {\n  numberValidator(n).isInt().isPositive()\n  numberValidator(p).greaterThanOrEqual(0).lessThan(1)\n\n  return () => {\n    let i = 0\n    let x = 0\n\n    while (i++ < n) {\n      if (random.next() < p) {\n        x++\n      }\n    }\n    return x\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, p = 0.5) => {\n  numberValidator(p).greaterThan(0).lessThan(1)\n  const invLogP = 1.0 / Math.log(1.0 - p)\n\n  return () => {\n    return Math.floor(1 + Math.log(random.next()) * invLogP)\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, lambda = 1) => {\n  numberValidator(lambda).isPositive()\n\n  return () => {\n    return -Math.log(1 - random.next()) / lambda\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().greaterThanOrEqual(0)\n\n  return () => {\n    let sum = 0\n    for (let i = 0; i < n; ++i) {\n      sum += random.next()\n    }\n\n    return sum\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, n = 1) => {\n  numberValidator(n).isInt().isPositive()\n  const irwinHall = random.irwinHall(n)\n\n  return () => {\n    return irwinHall() / n\n  }\n}\n","import { Random } from '../random'\nimport { numberValidator } from '../validation'\n\nexport default (random: Random, alpha = 1) => {\n  numberValidator(alpha).greaterThanOrEqual(0)\n  const invAlpha = 1.0 / alpha\n\n  return () => {\n    return 1.0 / Math.pow(1.0 - random.next(), invAlpha)\n  }\n}\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","import { Point } from '../types';\n\nconst applyOffset = (point: Point, offset: Point) => ({\n  x: point.x + offset.x,\n  y: point.y + offset.y,\n});\n\nexport default applyOffset;\n","import { Point } from '../types';\n\nconst calcLineLength = (start: Point, end: Point) => {\n  const x = (end.x - start.x) ** 2;\n  const y = (end.y - start.y) ** 2;\n\n  return Math.sqrt(x + y);\n};\n\nexport default calcLineLength;\n","import { Point } from '../types';\n\nconst calcLineRadianAngle = ({ x, y }: Point): number => {\n  if (x > 0 && y >= 0) {\n    return Math.atan(y / x);\n  }\n\n  if (x > 0 && y < 0) {\n    return Math.atan(y / x) + 2 * Math.PI;\n  }\n\n  if (x < 0) {\n    return Math.atan(y / x) + Math.PI;\n  }\n\n  if (x === 0 && y > 0) {\n    return Math.PI / 2;\n  }\n\n  if (x === 0 && y < 0) {\n    return (Math.PI * 3) / 2;\n  }\n\n  return 0;\n};\n\nexport default calcLineRadianAngle;\n","import { Sides } from '../types';\n\nconst generateSides = (width: number, height: number): Sides => ({\n  TOP: {\n    start: { x: 0, y: 0 },\n    end: { x: width, y: 0 },\n  },\n  RIGHT: {\n    start: { x: width, y: 0 },\n    end: { x: width, y: height },\n  },\n  BOTTOM: {\n    start: { x: 0, y: height },\n    end: { x: width, y: height },\n  },\n  LEFT: {\n    start: { x: 0, y: 0 },\n    end: { x: 0, y: height },\n  },\n});\n\nexport default generateSides;\n","import random from 'random';\n\nimport { Line, Point, Sides } from '../types';\n\nconst getRandomPointOnSide = ({ start, end }: Line, offset: Point) => {\n  return {\n    x: start.x === end.x ? start.x : random.float(start.x + offset.x, end.x - offset.x),\n    y: start.y === end.y ? start.y : random.float(start.y + offset.y, end.y - offset.y),\n  };\n};\n\nconst createRandomLine = ({ TOP, RIGHT, BOTTOM, LEFT }: Sides, offset: Point): Line => {\n  const startSide = random.choice([TOP, RIGHT, BOTTOM, LEFT]);\n  let endSide = random.choice([TOP, RIGHT, BOTTOM, LEFT]);\n\n  // Start side and end side can't be the same.\n  while (startSide === endSide) {\n    endSide = random.choice([TOP, RIGHT, BOTTOM, LEFT]);\n  }\n\n  return {\n    start: getRandomPointOnSide(startSide as Line, offset),\n    end: getRandomPointOnSide(endSide as Line, offset),\n  };\n};\n\nexport default createRandomLine;\n","import CanvasFactory from './canvas.factory';\nimport Canvas from './canvas';\n\nexport { Canvas, CanvasFactory };\n","import Canvas from './canvas';\n\nexport default class CanvasFactory {\n  constructor(private readonly document: Document) {}\n\n  createCanvas(width: number, height: number) {\n    return new Canvas(this.document.createElement('canvas'), width, height);\n  }\n}\n","// @ts-ignore\nimport { fromPromise } from 'rxjs/src/internal/observable/innerFrom';\nimport { map, Observable, of } from 'rxjs';\n\nimport { Figure, Point } from '../types';\n\nexport default class Canvas {\n  private readonly _ctx: CanvasRenderingContext2D;\n\n  public get ctx() {\n    return this._ctx;\n  }\n\n  public get canvas() {\n    return this._canvas;\n  }\n\n  constructor(\n    private readonly _canvas: HTMLCanvasElement,\n    private readonly width: number,\n    private readonly height: number,\n  ) {\n    this._canvas.width = width;\n    this._canvas.height = height;\n\n    this._ctx = this._canvas.getContext('2d') as CanvasRenderingContext2D;\n  }\n\n  public save() {\n    return fromPromise(Promise.resolve().then(() => this.ctx.save()));\n  }\n\n  public restore() {\n    return fromPromise(Promise.resolve().then(() => this.ctx.restore()));\n  }\n\n  public drawImage(img: HTMLImageElement | HTMLCanvasElement, point: Point): Observable<void> {\n    return fromPromise(\n      Promise.resolve().then(() => {\n        this.ctx.drawImage(img, point.x, point.y, this.canvas.width, this.canvas.height);\n      }),\n    );\n  }\n\n  public drawPath(path: Point[], lineColor: string, backgroundColor: string): Observable<string> {\n    return fromPromise(\n      Promise.resolve().then(() => {\n        this.ctx.lineWidth = 7;\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.fillStyle = backgroundColor;\n\n        this.ctx.beginPath();\n        path.forEach(({ x, y }) => this.ctx.lineTo(x, y));\n        this.ctx.closePath();\n\n        this.ctx.fill();\n        this.ctx.stroke();\n        this.ctx.clip();\n      }),\n    ).pipe(map(() => this.canvas.toDataURL()));\n  }\n\n  public drawFigure({ left, right }: Figure, lineColor: string, backgroundColor: string): Observable<string> {\n    return fromPromise(\n      Promise.resolve().then(() => {\n        this.ctx.lineWidth = 4;\n        this.ctx.strokeStyle = lineColor;\n        this.ctx.fillStyle = backgroundColor;\n\n        this.ctx.beginPath();\n        [...left, ...right].forEach(({ x, y }) => this.ctx.lineTo(x, y));\n        this.ctx.closePath();\n\n        this.ctx.fill();\n        this.ctx.stroke();\n      }),\n    ).pipe(map(() => this.canvas.toDataURL()));\n  }\n\n  public clear(): Observable<void> {\n    return fromPromise(\n      Promise.resolve().then(() => {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      }),\n    );\n  }\n\n  public toDataUrl() {\n    return of(this.canvas.toDataURL());\n  }\n\n  public fill(color: string) {\n    this.ctx.fillStyle = color;\n    this.ctx.beginPath();\n    this.ctx.rect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.closePath();\n    this.ctx.fill();\n  }\n}\n","import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint.\n *\n * ```ts\n * import { interval, animationFrameScheduler } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);        // Intervals are scheduled\n *                                        // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),  // ...but we will observe on animationFrame\n * )                                      // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n","import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n","import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n *\n * ```ts\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During teardown, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n","import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n","import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n"],"names":["$7aced346698c521d$export$cc3d42e6b2b9cf8b","_super","BehaviorSubject","_value","_this","call","this","$9D8rd","__extends","Object","defineProperty","prototype","get","getValue","_subscribe","subscriber","subscription","closed","next","_a","hasError","thrownError","_throwIfClosed","value","Subject","$702e4d306615a028$var$extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","$702e4d306615a028$export$a8ba968b8961cb8a","TypeError","String","__","constructor","create","$702e4d306615a028$export$1050f835b63b671e","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","e","rejected","result","done","then","apply","$702e4d306615a028$export$67ebef60e6f28a6","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","$702e4d306615a028$export$19a8beecd37a4c45","o","s","m","i","$702e4d306615a028$export$8d051b38c9118094","r","ar","error","$702e4d306615a028$export$1216008129fb82ed","to","from","il","j","$702e4d306615a028$export$10c90e4f7922046c","$702e4d306615a028$export$e427f37a30a4de9b","asyncIterator","q","a","resume","fulfill","settle","shift","$702e4d306615a028$export$e3b29a3d6162315f","$2d63f5ffe6ca8602$export$b6bbab5a9b109038","observers","isStopped","lift","operator","subject","$2d63f5ffe6ca8602$export$155189cde295587d","$5Mj7J","ObjectUnsubscribedError","$cxQqV","errorContext","copy","slice","copy_1","__values","copy_1_1","err","complete","unsubscribe","_trySubscribe","_checkFinalizedStatuses","_innerSubscribe","$bgI6x","EMPTY_SUBSCRIPTION","Subscription","$3JYOM","arrRemove","asObservable","observable","$6OiYn","Observable","source","destination","AnonymousSubject","_b","subscribe","$hOMJ7","parcelRequire","$4f562137a990678a$export$77cea355fa80b5f4","observerOrNext","Subscriber","$gCSeg","isFunction","$4f562137a990678a$var$isObserver","isSubscription","SafeSubscriber","add","sink","forEach","promiseCtor","$4f562137a990678a$var$getPromiseCtor","$kaCww","pipe","operations","_i","arguments","$1itL3","pipeFromArray","toPromise","x","$hmjgn","config","$cf8ce74b80455e9f$export$60959659b2c22881","$cf8ce74b80455e9f$export$88d395d20619a0af","$cf8ce74b80455e9f$export$94eeb6a328cab6c7","$cf8ce74b80455e9f$var$handleStoppedNotification","$ZT8xQ","nextNotification","_next","errorNotification","_error","COMPLETE_NOTIFICATION","_complete","context_1","useDeprecatedNextContext","bind","$cf8ce74b80455e9f$var$wrapForErrorHandling","$75rFk","noop","$cf8ce74b80455e9f$var$defaultErrorHandler","handler","instance","args","__spreadArray","__read","useDeprecatedSynchronousErrorHandling","captureError","$28DKm","reportUnhandledError","notification","onStoppedNotification","$gwzK1","timeoutProvider","setTimeout","$c1aa42b0603892d6$export$f6e2535fb5126e54","$8343668acd7c4a9b$export$f55210826850c514","initialTeardown","_parentage","_teardowns","empty","errors","isArray","_parentage_1","_parentage_1_1","remove","$l4W4q","UnsubscriptionError","_teardowns_1","_teardowns_1_1","teardown_1","$8343668acd7c4a9b$var$execTeardown","teardown","_hasParent","_addParent","parent","includes","_removeParent","EMPTY","$8343668acd7c4a9b$export$610f9c3ca1a38dd8","$8343668acd7c4a9b$export$4f9221cbada3c4fc","$f587043ffd615a90$export$c9648b76fd580c34","createErrorClass","message","map","toString","join","name","$ebe567a061bc80f6$export$128a15b65d1b6041","createImpl","ctorFunc","Error","stack","$2b94c03d07e501cc$export$dae3f38077fc36c0","arr","item","index","indexOf","splice","$ca336efb1b4fb564$export$e506a1d27d1eaa20","onUnhandledError","undefined","$18eb28ff53cc4943$export$ebf645db02d3e99f","$c07b5bfa3b9d4401$export$365aa6bd3c788e3d","delegate","clearTimeout","handle","$528e75db69787807$export$8793edee2d425525","$0ba077a4cdfd9739$export$b7f97edb34bc1f87","$0ba077a4cdfd9739$export$9c8f6e8d39c60cf3","$0ba077a4cdfd9739$export$dd472c3d8fe5a85a","$0ba077a4cdfd9739$export$ff9346b0d1d30313","kind","$92213d3dd6a83b5d$var$context","$92213d3dd6a83b5d$export$d974811edc77eafa","cb","isRoot","errorThrown","$92213d3dd6a83b5d$export$3e205fbb5df021e0","$eaf29fccbded6ed3$export$5ab46cbf6120b33a","$a4Ze1","$0f1e8e2d1fe93adf$export$71f88a61afaa14d7","fns","identity","input","reduce","prev","fn","$7569c528cdd9d182$export$f0954fd7d5368655","$43504509ae7aa03d$export$f708eee25634bc80","$d9kQQ","$98aaadcfa91e6727$export$3dea766d36a8935f","predicate","operate","$4QgEI","OperatorSubscriber","$992c4a42843eb1d0$export$871731df685d7753","init","$992c4a42843eb1d0$export$ebec8610810318c5","liftedSource","$3868f035248205c1$export$8fbbf0c4d80268e5","onNext","onComplete","onError","onFinalize","$8d0746215a23f9ce$export$b5bbde3786dfbd68","resultSelector","$54Vhv","popResultSelector","$cHzdT","argsArgArrayOrObject","sources","keys","values","remainingCompletions","remainingEmissions","_loop_1","sourceIndex","hasValue","$2ypWW","innerFrom","$04t8s","createObject","$jOyqp","mapOneOrManyArgs","$93f4d2c1cc93ee63$var$isArray","$93f4d2c1cc93ee63$var$getPrototypeOf","getPrototypeOf","$93f4d2c1cc93ee63$var$objectProto","$93f4d2c1cc93ee63$var$getKeys","$93f4d2c1cc93ee63$export$8871b3799a14360f","first_1","obj","key","$1dc2e2cd8f7c5351$export$6a9cfa3ebc765910","$rOw2q","isInteropObservable","obs","$bGCU7","isArrayLike","array","$dy1jD","isPromise","promise","$aGtFl","isAsyncIterable","$1dc2e2cd8f7c5351$export$e073fccf36d78cc1","$fQMll","isIterable","iterable","iterable_1","iterable_1_1","$7gZl2","isReadableStreamLike","readableStream","readableStreamLikeToAsyncGenerator","$iolDb","createInvalidObservableTypeError","asyncIterable","asyncIterable_1","__asyncValues","asyncIterable_1_1","$1dc2e2cd8f7c5351$var$process","catch","$8821cb8787de9fb5$export$1e2f57719e155213","$9dcf7896928e75dd$export$4369c812aac99591","$0539b51af1903d0a$export$48c0cddbc99c45c2","$7c74d6a5e2273447$export$edb10ab8dd75a915","$d63b3f5b704e6de4$export$7cbe71b9fa263484","$ZpNjd","$b8a13650b96f19ab$export$9652023d9040757","$0b89b4d4fb8bd3fd$export$6f58e2338da23f4d","$54b99b9095e84ce4$export$cf4785e597badab3","reader","getReader","__await","read","releaseLock","$54b99b9095e84ce4$export$c088ffafdba7405f","$3b29c258456d9a89$var$last","$3b29c258456d9a89$export$9ae19b645239a61b","$3b29c258456d9a89$export$29534b2f653ae592","$hEazg","isScheduler","$cd8e5ea142a386bd$export$187e35932e88c15c","schedule","$e6cd63efe08c02de$var$isArray","$e6cd63efe08c02de$export$559affaa48f4288d","$d4PzE","$e6cd63efe08c02de$var$callOrApply","$9853a79d111e4e33$export$871de8747c9eaa88","project","$00d6f9870244ce2a$export$79c7e160a7743efd","$2fbcbd7f7704e649$export$9f6ea8e48bc26eab","innerSubscriber","isComplete","checkComplete","innerIndex","outerIndex","innerValue","$3e7edc5b22925f26$export$3f23594af5f37336","tapObserver","isUnsub","finalize","$713f904c66aee635$export$2e2bcd8739ae039","angle","distance","Math","cos","sin","$b7aae75e59500d03$export$f58c8ae050ed515b","point","canvasWidth","canvasHeight","$b7aae75e59500d03$export$a31015ffefd29904","startSide","endSide","sides","figureSide","directions","reverse","currentSideIdx","findIndex","side","closingPath","end","start","$b7aae75e59500d03$export$2e2bcd8739ae039","path","width","height","left","right","$1CwpD","$233269100767345b$export$2e2bcd8739ae039","lineLength","countOfPoints","offset","onePartSize","points","acc","randDistance","default","float","lineStart","lineEnd","lineDistance","distanceToPoint","fractionOfTotal","$233269100767345b$export$aa50121ccd6f9820","offsetAbs","abs","offsetPoint","$9bgW6","prevPoint","RNG","_seed","seed","_opts","strSeed","k","charCodeAt","RNGFunction","_RNG","thunk","opts","_rng","$12e27b7b937bcc47$var$_inheritsLoose","_proto","clone","$12e27b7b937bcc47$var$_createClass","$12e27b7b937bcc47$export$e6cb7150fd4ac6e7","_args$","arg0","seedrandom","$12e27b7b937bcc47$var$uniform","random","min","max","numberValidator","num","NumberValidator","isInt","Number","isInteger","isPositive","lessThan","greaterThanOrEqual","greaterThan","$12e27b7b937bcc47$var$uniformInt","floor","$12e27b7b937bcc47$var$uniformBoolean","logFactorialTable","logFactorial","RNGMathRandom","Random","rng","_patch","_cache","uniform","uniformInt","integer","bool","uniformBoolean","_memoize","normal","mu","sigma","sqrt","log","logNormal","exp","bernoulli","binomial","geometric","invLogP","poisson","lambda","expMean","u","smu","invAlpha","vR","us","_logFactorial","exponential","irwinHall","sum","bates","pareto","alpha","pow","use","RNGFactory","patch","unpatch","choice","getter","distribution","concat","$12e27b7b937bcc47$export$2e2bcd8739ae039","$cmoHh","$ixfky","alea","xor128","$euRi5","xorwow","$hDsEw","xorshift7","$3J2Zm","xor4096","$6Px8M","tychei","$lDm0S","module","exports","global","module1","define1","Alea","me","mash","data","h","Mash","s0","c","s1","s2","impl","xg","state","prng","int32","double","quick","amd","define","XorGen","strseed","z","w","X","Date","limit","pool","math","nodecrypto","rngname","startdenom","significance","overflow","mask","options","callback","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","S","pass","is_math_call","keylen","count","depth","prop","typ","smear","stringseed","fromCharCode","ex","self","$effd71f2f698f251$export$2e2bcd8739ae039","$17ad549dae52a8e5$export$2e2bcd8739ae039","$039fa85bf3ebf74f$export$2e2bcd8739ae039","atan","PI","$6f302330bdae29bb$export$2e2bcd8739ae039","TOP","RIGHT","BOTTOM","LEFT","$1d126c2708b2c0ae$var$getRandomPointOnSide","$1d126c2708b2c0ae$export$2e2bcd8739ae039","$2OasB","$c7af3c66050fe850$export$2e2bcd8739ae039","document","createCanvas","createElement","$8208i","$957c8aceafd70920$export$2e2bcd8739ae039","ctx","_ctx","canvas","_canvas","getContext","save","fromPromise","restore","drawImage","img","drawPath","lineColor","backgroundColor","lineWidth","strokeStyle","fillStyle","beginPath","lineTo","closePath","fill","stroke","clip","toDataURL","drawFigure","clear","clearRect","toDataUrl","$2b25J","of","color","rect","$8dea2a5a9aef40d9$export$60f45028237c39d1","$3BZSr","$j0j64","$642e4d31e8d4aacd$export$1e2f57719e155213","$3NjkP","$d784b5735e415c26$export$4369c812aac99591","$3f6cab3311af3a80$export$f6e2535fb5126e54","$d8IQ7","$15b65541df426f83$export$77cea355fa80b5f4","static","$15b65541df426f83$var$isObserver","$eSlFA","$48esV","$15b65541df426f83$var$getPromiseCtor","$8HBOY","$kPKOr","$2uaZX","$e0f5e4f9667a0bb8$export$60959659b2c22881","$e0f5e4f9667a0bb8$export$94eeb6a328cab6c7","super","$e0f5e4f9667a0bb8$export$88d395d20619a0af","$e0f5e4f9667a0bb8$var$handleStoppedNotification","$k8Oxg","context","$e0f5e4f9667a0bb8$var$wrapForErrorHandling","$dTDHi","$e0f5e4f9667a0bb8$var$defaultErrorHandler","$eSn6S","$79e32c619c34a49b$export$f55210826850c514","$M5SMJ","$79e32c619c34a49b$var$execTeardown","$aHghA","$79e32c619c34a49b$export$4f9221cbada3c4fc","$e77732dffad7beff$export$c9648b76fd580c34","$29619c4ce07430dd$export$128a15b65d1b6041","$3f83c18dbb3f6639$export$dae3f38077fc36c0","$47aa70965ace4335$export$e506a1d27d1eaa20","$fbda9f95bc2a7429$export$ebf645db02d3e99f","$0a855584e95e0919$export$365aa6bd3c788e3d","$16d1cda012a675e2$export$8793edee2d425525","$a6e3ded77c9d6c05$export$b7f97edb34bc1f87","$a6e3ded77c9d6c05$export$9c8f6e8d39c60cf3","$a6e3ded77c9d6c05$export$dd472c3d8fe5a85a","$a6e3ded77c9d6c05$export$ff9346b0d1d30313","$225b3165a0329638$var$context","$225b3165a0329638$export$d974811edc77eafa","$225b3165a0329638$export$3e205fbb5df021e0","$993ebd2b2c6c87e6$export$5ab46cbf6120b33a","$4Vffc","$7373dcb0722c644b$export$71f88a61afaa14d7","$d4fc86ed6310a311$export$f0954fd7d5368655","$501c231e54b386ed$export$48c0cddbc99c45c2","$91f1e5a69294c91c$export$edb10ab8dd75a915","$84667278fb91e388$export$7cbe71b9fa263484","$9aCbl","$02a6a8b15ff12270$export$9652023d9040757","$7cf58ae43088a800$export$6f58e2338da23f4d","async","$ee1bf0891f673d62$export$cf4785e597badab3","$ee1bf0891f673d62$export$c088ffafdba7405f","$195e3b3043565ec4$export$ba255e9e49e00608","scheduler","popScheduler","$46Tqd","$ci5Ul","$2fe2b696577919a5$export$6788812c4e6611e6","scheduled","$jxGcZ","$8f2bbfa9b5105688$export$49c44dfc2bb21d70","scheduleObservable","$16Erw","scheduleArray","$aS4Ip","schedulePromise","$i3S70","scheduleAsyncIterable","$4ZsdA","scheduleIterable","$arhob","scheduleReadableStreamLike","$e3a1d71c442b5de9$export$ed8bd553a12b6a30","$iNvbf","subscribeOn","$3blUb","observeOn","$4yU8l","$25136415cad576bc$export$9007f49c319d1ac7","delay","executeSchedule","$3525e15e439f8b93$export$a2b7447487315232","parentSubscription","work","repeat","scheduleSubscription","$daf4fd612cb884aa$export$1eb44d8f5f64733b","$7ea29ae5d684fb04$export$fc9afd948577f0a8","$0ce5b91768be0a6d$export$b34673931371729a","$3a22bf76b9b6de63$export$2b75c58ab9b5b766","$d2627b52a3f1ff1b$export$7c7f0979b56a32f3","$7999ea1c5b71ad25$export$3385251aeecad28a"],"version":3,"file":"index.561f552d.js.map"}